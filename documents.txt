["Course Outlines – BCIT Skip to main content Utility Navigation Learning Hub myBCIT Students Staff COVID-19 Info Main Navigation Programs & Courses Applied & Natural Sciences Business & Media Computing & IT Engineering Health Sciences Trades & Apprenticeships International Students English Training Academic Dates & Deadlines Admission Why BCIT? How to Apply Entrance Requirements Tuition & Fees Program Availability After You Apply Forms Contact Us Student Services Academic & Learning Services Campus Amenities Financial Aid & Awards Library Health & Wellness Safety & Security Student Life & Housing Technology Workplace & Career Opportunities Indigenous Initiatives International Student Centre Student Association Research Working with Us Research Centres Contact Research Applied Research Liaison Office Research Support People & Committees Centre for Applied Research & Innovation Research Funding Student Opportunities About BCIT Visit Us Our Schools Community Leadership & Vision News & Events Careers at BCIT Utility Navigation (mobile) Learning Hub myBCIT Students Staff COVID-19 Info Main Navigation (mobile) Programs & Courses Applied & Natural Sciences Business & Media Computing & IT Engineering Health Sciences Trades & Apprenticeships International Students English Training Academic Dates & Deadlines Admission Why BCIT? How to Apply Entrance Requirements Tuition & Fees Program Availability After You Apply Forms Contact Us Student Services Academic & Learning Services Campus Amenities Financial Aid & Awards Library Health & Wellness Safety & Security Student Life & Housing Technology Workplace & Career Opportunities Indigenous Initiatives International Student Centre Student Association Research Working with Us Research Centres Contact Research Applied Research Liaison Office Research Support People & Committees Centre for Applied Research & Innovation Research Funding Student Opportunities About BCIT Visit Us Our Schools Community Leadership & Vision News & Events Careers at BCIT Attend an Info Session Apply to a Program Give to BCIT Search Course Outlines COMP 2721 Computer Organization/Architecture School School of Computing and Academic Studies Program Computer Systems Technology (CST) Diploma Course Credits 4 Minimum Passing Grade 50% Start Date January 04, 2022 End Date April 22, 2022 Total Hours 60 Total Weeks 15 Hours/Weeks 4 Delivery Type Lecture Pre-requisites COMP 1113   and    COMP 1510 CRN 86158 Acknowledgement of Territories The British Columbia Institute of Technology acknowledges that our campuses are located on the unceded traditional territories of the Coast Salish Nations of Sḵwx̱wú7mesh (Squamish), səl̓ilwətaɁɬ (Tsleil-Waututh), and xwməθkwəy̓əm (Musqueam). Instructor Details Name Jason Wilder E-mail jason_wilder@bcit.ca Location SW2-301 (also email) Office Hours By appointment via video conferencing Course Description Computer organization is a fundamental topic for computer science students and for any future programmers. The course gives a good understanding of the computer hardware and how software is built on a specific hardware. The\ncomputer is regarded as a hierarchy of levels, each one performing some well-defined functions from the device level (hardware) to the problem-oriented language level. Each level is discussed and analyzed in detail. Course Learning Outcomes/Competencies Upon successful completion of this course, the student will be able to: Analyze and diagram the layered-architecture of a modern computer. Explain the basic concepts and terminology related to Computer Architecture and Organization. Discuss and compare modern machine architectures. Apply theories related to internal functional units to the performance analysis of various machine architectures. Explain and describe the characteristic of CPU architectures currently in use. Explain the integration and operation I/O devices and their impact on overall machine performance. Solve problems related to the performance and design of various computer architectures. Learning Resources Required: Structured Computer Organization (Sixth Edition) ISBN 0-13-148521-0 Andrew S. Tanenbaum Prentice-Hall Course Goals Evaluation Criteria Daily quizzes in the labs: 35% Research presentations: 15% Midterm exam: 25% Final exam: 25% Attendance Requirements Regular attendance in lectures, seminars, and labs is seen as critical to student success, and may be monitored by faculty. Unapproved absence of 2 or more classes may result in failure or forced withdrawal from the course or program. Please see Policy 5101 - Student Regulations: http://www.bcit.ca/files/pdf/policies/5101.pdf Other information Any form of plagiarism will result in a grade of ZERO for the first instance. – removed and replaced with the Academic Integrity statement. Plagiarism and other forms of cheating will not be tolerated: Students are encouraged to work in groups to develop peer to peer communication and support. However each student must complete and submit their own individual work (not copies of the same assignment) and not material found online or recycled from other courses. Assignments and labs are to be completed by each student on an individual basis unless stated otherwise. Academic misconduct also includes providing solutions to other students: Students who cheat or enable other students to cheat will be documented and kept on file. Any subsequent instances of academic misconduct will meet with harsher penalties. Penalties include being dropped with no refund and failing the course and/or being indefinitely removed from the program Academic Integrity: Violation of academic integrity, including plagiarism, dishonesty in assignments, examinations, or other academic performances are prohibited and will be handled in accordance with Policy 5104 - Academic Integrity and Appeals , and accompanying procedures. Course Schedule and Assignments Week Topic 1 - week of January 3 (in lieu) New Year's Day: No classes 1 - week of January 10 Overview John von Neumann Terminology Logarithms and powers of 2 Computer architecture layers Translation Interpretation RISC vs. CISC Hardware design principles Cache overview 2 - week of January 17 Clock speed and frequency von-Neumann datapath Pipelining, bandwidth, latency Error-correcting codes Error detection Hamming code 3 - week of January 24 More Hamming code Hard-disk drives Solid-state drives 4 - week of January 31 Circuits Multiplexers Decoders Gates Truth tables Word problems 1-bit ALU Buses, chips, and pins 5 - week of Februrary 7 Synchronous-bus read timing Asynchronous 6 - week of February 14 Midterm Examination Week (No classes) 7 - week of February 21 No classes: Family Day 8 - week of February 28 Registers and latches Register sets Bus Arbitration Single-bus datapath in the CPU 9 - week of March 7 More datapath Microcode and microprogramming Direct-mapped cache overview Logarithms 10 - week of March 14 Spring break (No classes) 11 - week of March 21 Direct-mapped cache Virtual addressing Main memory Where memory goes in cache 12 - week of March 28 More direct-mapped cache Cache placement Set-associative cache 13 - week of April 4 Instruction formats Expanding opcodes 14 - week of April 11 Assembly programming 15 - week of April 12/18 Final Examination (not cumulative) (No classes) BCIT Policy Any student who needs special assistance in the event of a medical emergency or building evacuation (either because of a disability or for any other reason) should promptly inform their course instructor(s) and Accessibility Services of their personal circumstances. Human Rights, Harassment and Discrimination: The BCIT community is made up of individuals from every ability, background, experience and identity, each contributing uniquely to the richness and diversity of the BCIT community as a whole. In recognition of this, and the intrinsic value of our diversity, BCIT seeks to foster a climate of collaboration, understanding and mutual respect between all members of the community and ensure an inclusive accessible working and learning environment where everyone can succeed. Respect, Diversity, and Inclusion is a supportive resource for both students and employees of BCIT, to foster a respectful learning and working environment. Any student who feels that they are experiencing discrimination or harassment (personal or human rights-related) can confidentially access this resource for advice and support. Please see Policy 7507 – Harassment and Discrimination and accompanying procedure. Students should make themselves aware of additional Education, Administration, Safety and other BCIT policies listed at https://www.bcit.ca/about/administration/policies.shtml Guidelines for School of Computing and Academic Studies Attempts: Students must successfully complete a course within a maximum of three (3) attempts at the course.  Students with two attempts in a single course will be allowed to repeat the course only upon special written permission from the Associate Dean.  Students who have not successfully completed a course within three attempts will not be eligible to graduate from their respective program. Approved I verify that the content of this course outline is current. Jason Harrison, Instructor December 28, 2021 I verify that this course outline has been reviewed. Chi En Huang, Program Head December 28, 2021 I verify that this course outline has been reviewed and complies with BCIT policy. Aaron Hunter, Acting Associate Dean December 28, 2021 Note: Should changes be required to the content of this course outline, students will be given reasonable notice. Contact 3700 Willingdon Ave. Burnaby, British Columbia Canada V5G 3H2 bcit.ca Telephone: 604-434-5734 Toll-free (Can/US): 1-866-434-1610 More contact numbers Like us on Facebook Follow us on Twitter Add us on LinkedIn Follow us on Instagram Feedback Copyright Privacy Visit Apply Now Give News Events Careers Campus Information Burnaby Campus Downtown Campus Marine Campus Aerospace Technology Campus Annacis Island Campus Feedback Copyright Privacy", 'Course Outlines – BCIT Skip to main content Utility Navigation Learning Hub myBCIT Students Staff COVID-19 Info Main Navigation Programs & Courses Applied & Natural Sciences Business & Media Computing & IT Engineering Health Sciences Trades & Apprenticeships International Students English Training Academic Dates & Deadlines Admission Why BCIT? How to Apply Entrance Requirements Tuition & Fees Program Availability After You Apply Forms Contact Us Student Services Academic & Learning Services Campus Amenities Financial Aid & Awards Library Health & Wellness Safety & Security Student Life & Housing Technology Workplace & Career Opportunities Indigenous Initiatives International Student Centre Student Association Research Working with Us Research Centres Contact Research Applied Research Liaison Office Research Support People & Committees Centre for Applied Research & Innovation Research Funding Student Opportunities About BCIT Visit Us Our Schools Community Leadership & Vision News & Events Careers at BCIT Utility Navigation (mobile) Learning Hub myBCIT Students Staff COVID-19 Info Main Navigation (mobile) Programs & Courses Applied & Natural Sciences Business & Media Computing & IT Engineering Health Sciences Trades & Apprenticeships International Students English Training Academic Dates & Deadlines Admission Why BCIT? How to Apply Entrance Requirements Tuition & Fees Program Availability After You Apply Forms Contact Us Student Services Academic & Learning Services Campus Amenities Financial Aid & Awards Library Health & Wellness Safety & Security Student Life & Housing Technology Workplace & Career Opportunities Indigenous Initiatives International Student Centre Student Association Research Working with Us Research Centres Contact Research Applied Research Liaison Office Research Support People & Committees Centre for Applied Research & Innovation Research Funding Student Opportunities About BCIT Visit Us Our Schools Community Leadership & Vision News & Events Careers at BCIT Attend an Info Session Apply to a Program Give to BCIT Search Course Outlines COMP 2714 Relational Database Systems School School of Computing and Academic Studies Program Computer Systems Technology (CST) Diploma Course Credits 5 Minimum Passing Grade 50% Start Date January 04, 2022 End Date April 22, 2022 Total Hours 75 Total Weeks 15 Hours/Weeks 5 Delivery Type Lecture Pre-requisites COMP 1712 CRN 86157 Acknowledgement of Territories The British Columbia Institute of Technology acknowledges that our campuses are located on the unceded traditional territories of the Coast Salish Nations of Sḵwx̱wú7mesh (Squamish), səl̓ilwətaɁɬ (Tsleil-Waututh), and xwməθkwəy̓əm (Musqueam). Instructor Details Name Alireza Davoodi E-mail adavoodi@bcit.ca Location online Office Hours Office Hours will be posted on the Learning Hub. Office hours will be via video conferencing. Course Description This course covers relational database technology, including basic concepts, relational algebra, enhanced entity-relationship data modeling, functional dependencies and normalization, design methodology, SQL query language (DDL and DML), views, access control and transaction management. Students design and implement a database application using RDBMS. Also covers some current database trends such as data warehousing and OLAP and use of databases through web technology. Course Learning Outcomes/Competencies At the end of this course, the student will be able to: Describe the functions and characteristics of the relational database model. Apply techniques of database design including: Enhanced entity-relationship modeling. Functional dependencies and normalization. Derivation of relations schema from EER models. Apply database design process to design and implement a database application. Use SQL to implement and query a relational database including: Data definition language (DDL) and constraints. Data manipulation language (DML) for data insert, update and delete. Data manipulation language (DML) for data queries, including subqueries and views. Data control language (DCL) for access control. Discuss techniques for transaction management and concurrency control. Describe the use of databases in data warehousing and OLAP. Learning Resources Main reference [Optional]: Fundamentals of Database Systems, 7th Edition, Elmasri & Navathe, ISBN-10: 0133971112 • ISBN-13: 9780133971118 Supplementary-Optional: Database Systems Design, Implementation, and Management, 13e, by Carlos Coronel, et al, Cengage Learning, ISBN: 978-1337627900 Evaluation Criteria Assignments 15% 4 Assignments Tutorials 5% Attendance + Participation Labs-Practical 10% Quizzes 10% Midterm Exam 30% Final Exam 30% Total 100 Attendance Requirements Regular attendance in lectures, seminars, and labs is seen as critical to student success, and may be monitored by faculty. Unapproved absence of 2 or more classes may result in failure or forced withdrawal from the course or program. Please see Policy 5101 - Student Regulations: http://www.bcit.ca/files/pdf/policies/5101.pdf Course Specific Requirements N/A Course topics The course is divided into 5 Modules: Modules Topics Module1: ER Model Module2: Relational Model Module3: SQL Module4: Functional Dependencies (FDs) and Normalization Module5: Database Management and Please check out the details below Week # Week of Lectures/Topics (Thursdays) Lecture -Tutorials (Thursdays) Practical - Labs Quizzes Assignments Week 1 Jan3-Jan7 Intro to the course+Introduction to Database Systems 1.1-ER Basic Tutorial No Lab Week 2 Jan10-Jan14 Entity-Relationship Model 1.2 ER Advanced Tutorial Module 1 Case Study-Start Assignment 1: ER Models Due: Jan 28 Week 3 Jan17-Jan21 Relational Model 2.1 Relational Model Module 1 Case Study-Continue+Working on the Assignment 1 Week 4 Jan24-Jan28 Relational Model (Cont.) 2.2 Mapping Module 2 Case Study-Start Week 5 Jan31-Feb4 Introduction to SQL 3.0 Setting up SQL Module 2 Case Study-Continue + Working on Assignment 2 Quiz 1 Assignment 2: Relational Model Due: Feb 25 Note: No assignment activity is expected during the exam week Week 6 Feb7-Feb11 SQL - DDL 3.1 SQL Introduction Working on Assignment 2 Week 7 Feb14-Feb18 Midterm Exam Week - No Class Week 8 Feb21-Feb25 SQL - DML 3.2 SQL Basic Case Study 3.1: SQL: DDL Week 9 Feb28-March4 SQL - Advanced 3.3 SQL Advanced Case Study 3.2: SQL: DML Assignment 3: SQL Due: March 11 Week 10 March7-March11 FDs and Normalization-1 FDs and Normalization-2 Case Study 3.2: SQL: DML + Working Assignment 3 Quiz 2 Week 11 March14-March18 Spring Break-No Class Week 12 March21-March25 FDs and Normalization-3 4.1 Functional Dependencies Module 4 Case Study 1 Week 13 March28-April1 Database Design and Theory 4.2 Normalisation Module 4 Case Study 2 + Working on Assignment 4 Assignment 4: Normalization Due: April 11 Week 14 April4-April8 Database Security and Operations Access Control and Transaction Management Data Warehousing & OLAP Quiz 3 Week 15 April 11 Last Day of the classes April 12 Study Day - No Class April 13-April14 Final Exam - No Class Week 16 April 15-April18 Easter Long Weekend - No Class April 19-April21 Final Exam - No Class BCIT Policy Any student who needs special assistance in the event of a medical emergency or building evacuation (either because of a disability or for any other reason) should promptly inform their course instructor(s) and Accessibility Services of their personal circumstances. Human Rights, Harassment and Discrimination: The BCIT community is made up of individuals from every ability, background, experience and identity, each contributing uniquely to the richness and diversity of the BCIT community as a whole. In recognition of this, and the intrinsic value of our diversity, BCIT seeks to foster a climate of collaboration, understanding and mutual respect between all members of the community and ensure an inclusive accessible working and learning environment where everyone can succeed. Respect, Diversity, and Inclusion is a supportive resource for both students and employees of BCIT, to foster a respectful learning and working environment. Any student who feels that they are experiencing discrimination or harassment (personal or human rights-related) can confidentially access this resource for advice and support. Please see Policy 7507 – Harassment and Discrimination and accompanying procedure. Students should make themselves aware of additional Education, Administration, Safety and other BCIT policies listed at https://www.bcit.ca/about/administration/policies.shtml Guidelines for School of Computing and Academic Studies Attempts: Students must successfully complete a course within a maximum of three (3) attempts at the course.  Students with two attempts in a single course will be allowed to repeat the course only upon special written permission from the Associate Dean.  Students who have not successfully completed a course within three attempts will not be eligible to graduate from their respective program. Approved I verify that the content of this course outline is current. Alireza Davoodi, Instructor January 04, 2022 I verify that this course outline has been reviewed. Chi En Huang, Program Head January 04, 2022 I verify that this course outline has been reviewed and complies with BCIT policy. Aaron Hunter, Acting Associate Dean January 04, 2022 Note: Should changes be required to the content of this course outline, students will be given reasonable notice. Contact 3700 Willingdon Ave. Burnaby, British Columbia Canada V5G 3H2 bcit.ca Telephone: 604-434-5734 Toll-free (Can/US): 1-866-434-1610 More contact numbers Like us on Facebook Follow us on Twitter Add us on LinkedIn Follow us on Instagram Feedback Copyright Privacy Visit Apply Now Give News Events Careers Campus Information Burnaby Campus Downtown Campus Marine Campus Aerospace Technology Campus Annacis Island Campus Feedback Copyright Privacy', 'Course Outlines – BCIT Skip to main content Utility Navigation Learning Hub myBCIT Students Staff COVID-19 Info Main Navigation Programs & Courses Applied & Natural Sciences Business & Media Computing & IT Engineering Health Sciences Trades & Apprenticeships International Students English Training Academic Dates & Deadlines Admission Why BCIT? How to Apply Entrance Requirements Tuition & Fees Program Availability After You Apply Forms Contact Us Student Services Academic & Learning Services Campus Amenities Financial Aid & Awards Library Health & Wellness Safety & Security Student Life & Housing Technology Workplace & Career Opportunities Indigenous Initiatives International Student Centre Student Association Research Working with Us Research Centres Contact Research Applied Research Liaison Office Research Support People & Committees Centre for Applied Research & Innovation Research Funding Student Opportunities About BCIT Visit Us Our Schools Community Leadership & Vision News & Events Careers at BCIT Utility Navigation (mobile) Learning Hub myBCIT Students Staff COVID-19 Info Main Navigation (mobile) Programs & Courses Applied & Natural Sciences Business & Media Computing & IT Engineering Health Sciences Trades & Apprenticeships International Students English Training Academic Dates & Deadlines Admission Why BCIT? How to Apply Entrance Requirements Tuition & Fees Program Availability After You Apply Forms Contact Us Student Services Academic & Learning Services Campus Amenities Financial Aid & Awards Library Health & Wellness Safety & Security Student Life & Housing Technology Workplace & Career Opportunities Indigenous Initiatives International Student Centre Student Association Research Working with Us Research Centres Contact Research Applied Research Liaison Office Research Support People & Committees Centre for Applied Research & Innovation Research Funding Student Opportunities About BCIT Visit Us Our Schools Community Leadership & Vision News & Events Careers at BCIT Attend an Info Session Apply to a Program Give to BCIT Search Course Outlines COMP 2510 Procedural Programming School School of Computing and Academic Studies Program Computer Systems Technology (CST) Diploma Course Credits 5 Minimum Passing Grade 50% Start Date January 04, 2022 End Date April 22, 2022 Total Hours 75 Total Weeks 15 Hours/Weeks 5 Delivery Type Lecture Pre-requisites COMP 1510 or (PTS equivalents COMP 1409 and COMP 1451). CRN 86155 Acknowledgement of Territories The British Columbia Institute of Technology acknowledges that our campuses are located on the unceded traditional territories of the Coast Salish Nations of Sḵwx̱wú7mesh (Squamish), səl̓ilwətaɁɬ (Tsleil-Waututh), and xwməθkwəy̓əm (Musqueam). Instructor Details Name Jee Ho Ryoo E-mail jee_ho_ryoo@bcit.ca Location Online Office Hours Will be posted in the Learning Hub. Course Description This hands-on course follows on from COMP 1510. This course covers the fundamental concepts of design, development, testing, and debugging intermediate-level programs in a procedural language. Topics include language syntax, data abstraction and encapsulation, error handling, graphical user interfaces, and the implementation of selected data structures and algorithms. Course Learning Outcomes/Competencies Upon successful completion of this course, the student will be able to: Apply the properties of good procedural software design including encapsulation, information hiding, and functional decomposition to create easily extensible systems in the context of intermediate-level programs. Decompose a program into multiple modules with well defined interfaces. Analyze and explain behaviour of intermediate-level programs involving procedural programming constructs including encapsulation, information hiding, and functional decomposition. Write programs using file processing to read and write textual or binary data. Manage dynamic memory. Design, implement, debug and test intermediate-level procedural programs in a modern high-level procedural programming language. Develop recursive functions and compare recursion to iteration. Use pointers to implement data structures and explain their relation to arrays and strings. Implement data structures and basic algorithms including linked lists, binary search trees, insertion sort, selection sort & binary search. Learning Resources Software: The GNU C Compiler (gcc) (Required) A free copy of the JetBrains CLion Professional IDE (instructions provided at first lab) You can request your free JetBrains Education License in advance here: https://www.jetbrains.com/community/education/#students Textbook: Please note that these are not required : Programming in C (4th edition), Stephen G. Kochan, Addison-Wesley, ISBN: 0321776410 (Optional) C Primer Plus (6th edition), Stephen Prata, Addison-Wesley, ISBN: 0321928423 (Optional) Course Goals Upon successful completion of this course, the student will be able to: Apply the properties of good procedural software design including encapsulation, information hiding, and functional decomposition to create easily extensible systems in the context of intermediate-level programs. Decompose a program into multiple modules with well defined interfaces. Analyze and explain behaviour of intermediate-level programs involving procedural programming constructs including encapsulation, information hiding, and functional decomposition. Write programs using file processing to read and write textual or binary data. Manage dynamic memory. Design, implement, debug and test intermediate-level procedural programs in a modern high-level procedural programming language. Develop recursive functions and compare recursion to iteration. Use pointers to implement data structures and explain their relation to arrays and strings. Implement data structures and basic algorithms including linked lists, binary search trees, insertion sort, selection sort & binary search. Evaluation Criteria Criteria % Comments Labs and Quizzes 35 Assignments 15 Midterm Exam 20 Final Exam 30 Cumulative Exam Attendance Requirements Regular attendance in lectures, seminars, and labs is seen as critical to student success, and may be monitored by faculty. Unapproved absence of 2 or more classes may result in failure or forced withdrawal from the course or program. Please see Policy 5101 - Student Regulations: http://www.bcit.ca/files/pdf/policies/5101.pdf Course Specific Requirements Assignments: Late assignments, quizzes, lab submissions or exam submissions will not be accepted for marking. Assignments must be done on an individual basis unless otherwise specified by the instructor. Makeup Labs, Tests, Exams or Quizzes: There will be no makeup labs, tests, exams or quizzes. If you miss a lab, test, exam or quiz, you will receive zero marks. Exceptions may be made for documented medical reasons or extenuating circumstances. In such a case, it is the responsibility of the student to inform the instructor immediately. Ethics: BCIT assumes that all students attending the Institute will follow a high standard of ethics. Incidents of cheating or plagiarism may, therefore, result in a grade of zero for the assignment, quiz, test, exam, or project for all parties involved and/or expulsion from the course. Course Schedule and Assignments Week # Topic 1 Introduction to C, Arrays, etc 2 Introduction to Pointers 3 More Pointers, Recursive Programming, Console I/O 4 File I/O; More on recursion; Command Line Arguments 5 Pointers in detail; Array of pointers 6 Review of Data Type; Bit Manipulation; Pratice Problems 7 Midterm Exam 8 Structs; Dynamic Memory; C Preprocessor 9 Function Pointers; Generics 10 Introduction to Data Structures; Linked Lists 11 Spring Break 12 Binary Trees; Binary Search Trees 13 Doubly linked lists; LCA problem 14 Special Topic 15 Final Exam BCIT Policy Any student who needs special assistance in the event of a medical emergency or building evacuation (either because of a disability or for any other reason) should promptly inform their course instructor(s) and Accessibility Services of their personal circumstances. Human Rights, Harassment and Discrimination: The BCIT community is made up of individuals from every ability, background, experience and identity, each contributing uniquely to the richness and diversity of the BCIT community as a whole. In recognition of this, and the intrinsic value of our diversity, BCIT seeks to foster a climate of collaboration, understanding and mutual respect between all members of the community and ensure an inclusive accessible working and learning environment where everyone can succeed. Respect, Diversity, and Inclusion is a supportive resource for both students and employees of BCIT, to foster a respectful learning and working environment. Any student who feels that they are experiencing discrimination or harassment (personal or human rights-related) can confidentially access this resource for advice and support. Please see Policy 7507 – Harassment and Discrimination and accompanying procedure. Students should make themselves aware of additional Education, Administration, Safety and other BCIT policies listed at https://www.bcit.ca/about/administration/policies.shtml Guidelines for School of Computing and Academic Studies Attempts: Students must successfully complete a course within a maximum of three (3) attempts at the course.  Students with two attempts in a single course will be allowed to repeat the course only upon special written permission from the Associate Dean.  Students who have not successfully completed a course within three attempts will not be eligible to graduate from their respective program. Approved I verify that the content of this course outline is current. Jee Ho Ryoo, Instructor December 20, 2021 I verify that this course outline has been reviewed. Chi En Huang, Program Head December 27, 2021 I verify that this course outline has been reviewed and complies with BCIT policy. Aaron Hunter, Acting Associate Dean December 28, 2021 Note: Should changes be required to the content of this course outline, students will be given reasonable notice. Contact 3700 Willingdon Ave. Burnaby, British Columbia Canada V5G 3H2 bcit.ca Telephone: 604-434-5734 Toll-free (Can/US): 1-866-434-1610 More contact numbers Like us on Facebook Follow us on Twitter Add us on LinkedIn Follow us on Instagram Feedback Copyright Privacy Visit Apply Now Give News Events Careers Campus Information Burnaby Campus Downtown Campus Marine Campus Aerospace Technology Campus Annacis Island Campus Feedback Copyright Privacy', 'Course Outlines – BCIT Skip to main content Utility Navigation Learning Hub myBCIT Students Staff COVID-19 Info Main Navigation Programs & Courses Applied & Natural Sciences Business & Media Computing & IT Engineering Health Sciences Trades & Apprenticeships International Students English Training Academic Dates & Deadlines Admission Why BCIT? How to Apply Entrance Requirements Tuition & Fees Program Availability After You Apply Forms Contact Us Student Services Academic & Learning Services Campus Amenities Financial Aid & Awards Library Health & Wellness Safety & Security Student Life & Housing Technology Workplace & Career Opportunities Indigenous Initiatives International Student Centre Student Association Research Working with Us Research Centres Contact Research Applied Research Liaison Office Research Support People & Committees Centre for Applied Research & Innovation Research Funding Student Opportunities About BCIT Visit Us Our Schools Community Leadership & Vision News & Events Careers at BCIT Utility Navigation (mobile) Learning Hub myBCIT Students Staff COVID-19 Info Main Navigation (mobile) Programs & Courses Applied & Natural Sciences Business & Media Computing & IT Engineering Health Sciences Trades & Apprenticeships International Students English Training Academic Dates & Deadlines Admission Why BCIT? How to Apply Entrance Requirements Tuition & Fees Program Availability After You Apply Forms Contact Us Student Services Academic & Learning Services Campus Amenities Financial Aid & Awards Library Health & Wellness Safety & Security Student Life & Housing Technology Workplace & Career Opportunities Indigenous Initiatives International Student Centre Student Association Research Working with Us Research Centres Contact Research Applied Research Liaison Office Research Support People & Committees Centre for Applied Research & Innovation Research Funding Student Opportunities About BCIT Visit Us Our Schools Community Leadership & Vision News & Events Careers at BCIT Attend an Info Session Apply to a Program Give to BCIT Search Course Outlines COMP 2121 Discrete Mathematics School School of Computing and Academic Studies Program Computer Systems Technology (CST) Diploma Course Credits 4 Minimum Passing Grade 50% Start Date January 04, 2022 End Date April 22, 2022 Total Hours 60 Total Weeks 15 Hours/Weeks 4 Delivery Type Lecture Pre-requisites COMP 1113   or    COMP 1114 CRN 86154 Acknowledgement of Territories The British Columbia Institute of Technology acknowledges that our campuses are located on the unceded traditional territories of the Coast Salish Nations of Sḵwx̱wú7mesh (Squamish), səl̓ilwətaɁɬ (Tsleil-Waututh), and xwməθkwəy̓əm (Musqueam). Instructor Details Name Sandra Merchant E-mail smerchant3@bcit.ca Location Burnaby Campus: SW2-229, Downtown Campus: 617 Office Hours Office Hours will be posted on the Learning Hub. Course Description Discrete Mathematics concerns processes that consist of a sequence of individual steps. The ideas of discrete mathematics underline the science and technology specific to computer applications.  The Discrete Mathematics course provides the mathematical basis and concepts for applications in computer science: elementary logic, the logic of quantified statements, methods of proof, set theory, discrete functions, relations, counting and probabilities, sequences and mathematical induction, recursion, graphs, trees, and Boolean algebra. Course Learning Outcomes/Competencies Upon successful completion of this course, the student will be able to: Prove that an argument is valid using a truth table or valid argument forms. Prove mathematical arguments using Direct Proof and Counterexample. Solve problems in set theory and relate its concepts to enumeration problems and probability. Solve problems in basic counting theory involving combinations and permutations. Work with discrete mathematics functions and use them in applications. Design finite-state automata and finite-state machines. Apply the basic concepts and formulas of probability and distinguish between independent and mutually exclusive events. Compute event probabilities using probabilities trees. Apply mathematical induction to the solution of problems. Understand properties of integers. Represent computing problems in the form of a graph and tree. Diagram and identify properties of graphs and trees. Illustrate basic graph algorithms such as minimal spanning trees and shortest path. Use tree structure on problems related to searching and sorting. Carry out operations using sigma notation. Learning Resources Required: Computer (laptop or desktop), webcam, microphone. Scanning capability (you may need to scan and upload quizzes and tests - if you do not have a scanner you can use the free app Adobe Scan or similar on your cell phone) High-speed internet. Recommended Text: Discrete and Combinatorial Mathematics, an Applied Introduction, by Ralph P. Grimaldi, Fifth Edition, ISBN 0-201-72634-3. Evaluation Criteria Criteria % Comments Assignments 15 Lab Quizzes 20 Midterm Exam 30 Final Exam 35 TOTAL 100 Minimum passing grade for this course is 50% Assignments: There will be 3 assignments in this course. You are required to submit the assignments in groups of two. Quizzes: There will be 5 quizzes in this course that will be written during the lab time. Attendance Requirements Regular attendance in lectures, seminars, and labs is seen as critical to student success, and may be monitored by faculty. Unapproved absence of 2 or more classes may result in failure or forced withdrawal from the course or program. Please see Policy 5101 - Student Regulations: http://www.bcit.ca/files/pdf/policies/5101.pdf Course topics This schedule is subject to change at the discretion of the instructor. # Week of Outcome/Material Covered Reference/ Reading 1 Jan 4 ·         Course intro, The Rules of Sum and Product, Arrangements ·         Permutations with/without repetitions Chapter 1 2 Jan 11 ·         Combinations, Algebra of Combinations ·         Combinations with repetitions allowed Chapter 1 3 Jan 18 ·         Review of Logic, Logical Implication ·         Rules of Inference Chapter 2 4 Jan 25 ·         The Logic of Quantified Statements ·         Methods of Proof Chapter 2 5 Feb 1 ·         Set Theory ·         Inclusion-Exclusion Chapter 3 6 Feb 8 ·         Probability ·         Finite State Machines Chapters 3, 6 7 Feb 14-18 ·         Midterm Week - No Classes 8 Feb 22 ·         Sequences, Recursion Chapter 4 9 Mar 1 ·         Sigma notation, Summations ·         Mathematical Induction Chapter 4 10 Mar 8 ·         Introduction to Graphs ·         Introduction to Trees, Data representation, BFS Chapters 11, 12 11 Mar 14-18 ·         Spring Break - No Classes 12 Mar 22 ·         Properties of Binary Search Trees ·         Tree Traversals, DFS ·         Weighted Trees, Prefix Codes Chapter 12 13 Mar 29 ·         Huffman Algorithm ·         Optimal Weighted Trees and Sorted Lists Chapter 12 14 Apr 5 ·         Special Topics ·         Course Review 15 Apr 13/14, Apr 19-21 ·         Final Exam Week - No Classes BCIT Policy Any student who needs special assistance in the event of a medical emergency or building evacuation (either because of a disability or for any other reason) should promptly inform their course instructor(s) and Accessibility Services of their personal circumstances. Human Rights, Harassment and Discrimination: The BCIT community is made up of individuals from every ability, background, experience and identity, each contributing uniquely to the richness and diversity of the BCIT community as a whole. In recognition of this, and the intrinsic value of our diversity, BCIT seeks to foster a climate of collaboration, understanding and mutual respect between all members of the community and ensure an inclusive accessible working and learning environment where everyone can succeed. Respect, Diversity, and Inclusion is a supportive resource for both students and employees of BCIT, to foster a respectful learning and working environment. Any student who feels that they are experiencing discrimination or harassment (personal or human rights-related) can confidentially access this resource for advice and support. Please see Policy 7507 – Harassment and Discrimination and accompanying procedure. Students should make themselves aware of additional Education, Administration, Safety and other BCIT policies listed at https://www.bcit.ca/about/administration/policies.shtml Guidelines for School of Computing and Academic Studies Attempts: Students must successfully complete a course within a maximum of three (3) attempts at the course.  Students with two attempts in a single course will be allowed to repeat the course only upon special written permission from the Associate Dean.  Students who have not successfully completed a course within three attempts will not be eligible to graduate from their respective program. Approved I verify that the content of this course outline is current. Sandra Merchant, Instructor December 26, 2021 I verify that this course outline has been reviewed. David Holloway, Program Head December 28, 2021 I verify that this course outline has been reviewed. Chi En Huang, Program Head December 28, 2021 I verify that this course outline has been reviewed and complies with BCIT policy. Aaron Hunter, Acting Associate Dean December 28, 2021 Note: Should changes be required to the content of this course outline, students will be given reasonable notice. Contact 3700 Willingdon Ave. Burnaby, British Columbia Canada V5G 3H2 bcit.ca Telephone: 604-434-5734 Toll-free (Can/US): 1-866-434-1610 More contact numbers Like us on Facebook Follow us on Twitter Add us on LinkedIn Follow us on Instagram Feedback Copyright Privacy Visit Apply Now Give News Events Careers Campus Information Burnaby Campus Downtown Campus Marine Campus Aerospace Technology Campus Annacis Island Campus Feedback Copyright Privacy', "Course Outlines – BCIT Skip to main content Utility Navigation Learning Hub myBCIT Students Staff COVID-19 Info Main Navigation Programs & Courses Applied & Natural Sciences Business & Media Computing & IT Engineering Health Sciences Trades & Apprenticeships International Students English Training Academic Dates & Deadlines Admission Why BCIT? How to Apply Entrance Requirements Tuition & Fees Program Availability After You Apply Forms Contact Us Student Services Academic & Learning Services Campus Amenities Financial Aid & Awards Library Health & Wellness Safety & Security Student Life & Housing Technology Workplace & Career Opportunities Indigenous Initiatives International Student Centre Student Association Research Working with Us Research Centres Contact Research Applied Research Liaison Office Research Support People & Committees Centre for Applied Research & Innovation Research Funding Student Opportunities About BCIT Visit Us Our Schools Community Leadership & Vision News & Events Careers at BCIT Utility Navigation (mobile) Learning Hub myBCIT Students Staff COVID-19 Info Main Navigation (mobile) Programs & Courses Applied & Natural Sciences Business & Media Computing & IT Engineering Health Sciences Trades & Apprenticeships International Students English Training Academic Dates & Deadlines Admission Why BCIT? How to Apply Entrance Requirements Tuition & Fees Program Availability After You Apply Forms Contact Us Student Services Academic & Learning Services Campus Amenities Financial Aid & Awards Library Health & Wellness Safety & Security Student Life & Housing Technology Workplace & Career Opportunities Indigenous Initiatives International Student Centre Student Association Research Working with Us Research Centres Contact Research Applied Research Liaison Office Research Support People & Committees Centre for Applied Research & Innovation Research Funding Student Opportunities About BCIT Visit Us Our Schools Community Leadership & Vision News & Events Careers at BCIT Attend an Info Session Apply to a Program Give to BCIT Search Course Outlines COMM 2216 Business Communications 2 School School of Computing and Academic Studies Program Computer Systems Technology (CST) Diploma Course Credits 4 Minimum Passing Grade 50% Start Date January 04, 2022 End Date April 22, 2022 Total Hours 60 Total Weeks 15 Hours/Weeks 4 Delivery Type Lecture Pre-requisites 50% in   COMM 1116   or    COMM 1106   or    COMM 1103 CRN 86153 Acknowledgement of Territories The British Columbia Institute of Technology acknowledges that our campuses are located on the unceded traditional territories of the Coast Salish Nations of Sḵwx̱wú7mesh (Squamish), səl̓ilwətaɁɬ (Tsleil-Waututh), and xwməθkwəy̓əm (Musqueam). Instructor Details Name Sam Lee E-mail slee789@bcit.ca Location Online/DTC/SW2-260 Office Hours Office Hours for this course\xa0will be done virtually at Thursdays 1-2:30. I will set up an online\xa0booking system for these hours and provide the link in the Learning Hub. Course Description Information technology professionals spend time each day communicating orally and in writing with their supervisors, colleagues and clients.  As problem-solvers and entrepreneurs in industry, you need to communicate quickly, clearly, and effectively. This course will build on the skills you learned in first term to be an efficient and professional communicator at work.  You will learn how to conduct an effective job search and write the accompanying resume and cover letter to support it.  You will also write effective reports, deliver a persuasive oral presentation to your set, and participate effectively in meetings and group work.  You will prepare a formal report and present it orally and in writing. Course Learning Outcomes/Competencies Upon successful completion of this course, the student will be able to: Write an effective resume and cover letter. Write a variety of documents such as reports, proposals, instructions. Design and integrate graphics. Prepare and deliver a persuasive oral presentation. Participate effectively in teamwork. Conduct and participate in meetings productively. Prepare a formal proposal and present it orally and in writing. Use proper citation methods. Critically evaluate information to determine if it is accurate, relevant, and complete, and to use critical thinking to develop strong arguments. Learning Resources We will be using Open Educational Resources (OERs), and all authors will be attributed for the material used. All resources will be made available through The Learning Hub. Course Goals Upon successful completion of this course, the student will be able to: Write an effective resume and cover letter. Write user documentation. Prepare and conduct an informational interview. Prepare and deliver a persuasive oral presentation to your set. Conduct and participate in meetings productively. Prepare a formal report and present it orally and in writing. Critically evaluate information to determine if it is accurate, relevant, and complete, and to use critical thinking to develop strong arguments. Evaluation Criteria Criteria % Comments Resume and Application Letter 10 Job Interview 10 Proposal Report 20 Proposal Pitch 10 Instruction Manual/User Guide 20 Final Exam 20 Final Reflection Video 10 You must pass the final exam and you must have a 50% overall score to pass the course. There is no midterm in Comm 2216. Attendance Requirements Regular attendance in lectures, seminars, and labs is seen as critical to student success, and may be monitored by faculty. Unapproved absence of 2 or more classes may result in failure or forced withdrawal from the course or program. Please see Policy 5101 - Student Regulations: http://www.bcit.ca/files/pdf/policies/5101.pdf Other information The following statements are in accordance with the BCIT Policies 5101, 5102, 5104, and 7507, and their accompanying procedures. To review these policies and procedures please click on the links below. Attendance/Illness: In case of illness or other unavoidable cause of absence, the student must communicate as soon as possible with his/her instructor or Program Head or Chief Instructor, indicating the reason for the absence. Students who are seeking accommodation for a medical absence must have a BCIT approved medical certificate submitted to the department, substantiating the reason for absence. For other absences, the student should be prepared to provide appropriate supporting documentation. Unapproved absence in excess of the prescribed regulations within this outline may result in failure or forced withdrawal from the course or program. Please see Policy 5101 - Student Regulations, and accompanying procedures. Academic Integrity: Violation of academic integrity, including plagiarism, dishonesty in assignments, examinations, or other academic performances are prohibited and will be handled in accordance with Policy 5104 - Academic Integrity and Appeals, and accompanying procedures. Accommodation: Any student who may require accommodation from BCIT because of a physical or mental disability should refer to BCIT's Policy on Accommodation for Students with Disabilities (Policy #4501), and contact BCIT's Accessibility Services (SW1 2360, 604-451-6963) at the earliest possible time. Requests for accommodation must be made to Accessibility Services, and should not be made to a course instructor or Program area. Any student who needs special assistance in the event of a medical emergency or building evacuation (either because of a disability or for any other reason) should promptly inform their course instructor(s) and Accessibility Services of their personal circumstances. Human Rights, Harassment and Discrimination: The BCIT community is made up of individuals from every ability, background, experience and identity, each contributing uniquely to the richness and diversity of the BCIT community as a whole. In recognition of this, and the intrinsic value of our diversity, BCIT seeks to foster a climate of collaboration, understanding and mutual respect between all members of the community and ensure an inclusive accessible working and learning environment where everyone can succeed. Campus Mediation Services is a supportive resource for both students and employees of BCIT, to foster a respectful learning and working environment. Any student who feels that they are experiencing discrimination or harassment (personal or human rights-related) can confidentially access this resource for advice and support. Please see Policy 7507 – Harassment and Discrimination and accompanying procedure. Students should make themselves aware of additional Education, Administration, Safety and other BCIT policies listed at https://www.bcit.ca/about/administration/policies.shtml Course Schedule and Assignments Week / Date Material Covered Assignments due 1 / Jan 3 Job Search / Resumes /Cover Letter 2 / Jan 10 Job Interviews Resume and Letter  (10%) 3 / Jan 17 Job Interviews Interviews 1 (10%) 4 / Jan 24 Critical Thinking (Six Hats) Interviews 2 (10%) 5 / Jan 31 Proposals: Purpose, and Structure 6 / Feb 7 Proposals: Meetings, Team research/ Team Writing 7 / Feb 14 Midterm Exam Week 8 / Feb 21 Proposals: Summaries and Graphics 9 / Feb 28 Proposal Pitches: Structure and Performance Proposal Report (20%) 10 / Mar 7 User Guides/Instructions Overview Proposal Pitch (10%) 11 / Mar 14 Spring Break 12 / Mar 21 Instructions: Users and tasks; Markdown and GitHub Pages 13 / Mar 28 Instructions: Markdown, Images, References 14 / Apr 4 User Testing Instructions (20%) 15 / Apr 11 Final Exams Week Begins Final Exam 20% BCIT Policy Any student who needs special assistance in the event of a medical emergency or building evacuation (either because of a disability or for any other reason) should promptly inform their course instructor(s) and Accessibility Services of their personal circumstances. Human Rights, Harassment and Discrimination: The BCIT community is made up of individuals from every ability, background, experience and identity, each contributing uniquely to the richness and diversity of the BCIT community as a whole. In recognition of this, and the intrinsic value of our diversity, BCIT seeks to foster a climate of collaboration, understanding and mutual respect between all members of the community and ensure an inclusive accessible working and learning environment where everyone can succeed. Respect, Diversity, and Inclusion is a supportive resource for both students and employees of BCIT, to foster a respectful learning and working environment. Any student who feels that they are experiencing discrimination or harassment (personal or human rights-related) can confidentially access this resource for advice and support. Please see Policy 7507 – Harassment and Discrimination and accompanying procedure. Students should make themselves aware of additional Education, Administration, Safety and other BCIT policies listed at https://www.bcit.ca/about/administration/policies.shtml Guidelines for School of Computing and Academic Studies Attempts: Students must successfully complete a course within a maximum of three (3) attempts at the course.  Students with two attempts in a single course will be allowed to repeat the course only upon special written permission from the Associate Dean.  Students who have not successfully completed a course within three attempts will not be eligible to graduate from their respective program. Approved I verify that the content of this course outline is current. Sam Lee, Faculty December 14, 2021 I verify that this course outline has been reviewed. Jean Scribner, Program Head December 14, 2021 I verify that this course outline has been reviewed. Chi En Huang, Program Head December 27, 2021 I verify that this course outline has been reviewed and complies with BCIT policy. Pal Moses, Instructor on behalf of Patricia Sackville, Associate Dean January 04, 2022 Note: Should changes be required to the content of this course outline, students will be given reasonable notice. Contact 3700 Willingdon Ave. Burnaby, British Columbia Canada V5G 3H2 bcit.ca Telephone: 604-434-5734 Toll-free (Can/US): 1-866-434-1610 More contact numbers Like us on Facebook Follow us on Twitter Add us on LinkedIn Follow us on Instagram Feedback Copyright Privacy Visit Apply Now Give News Events Careers Campus Information Burnaby Campus Downtown Campus Marine Campus Aerospace Technology Campus Annacis Island Campus Feedback Copyright Privacy", "Course Outlines – BCIT Skip to main content Utility Navigation Learning Hub myBCIT Students Staff COVID-19 Info Main Navigation Programs & Courses Applied & Natural Sciences Business & Media Computing & IT Engineering Health Sciences Trades & Apprenticeships International Students English Training Academic Dates & Deadlines Admission Why BCIT? How to Apply Entrance Requirements Tuition & Fees Program Availability After You Apply Forms Contact Us Student Services Academic & Learning Services Campus Amenities Financial Aid & Awards Library Health & Wellness Safety & Security Student Life & Housing Technology Workplace & Career Opportunities Indigenous Initiatives International Student Centre Student Association Research Working with Us Research Centres Contact Research Applied Research Liaison Office Research Support People & Committees Centre for Applied Research & Innovation Research Funding Student Opportunities About BCIT Visit Us Our Schools Community Leadership & Vision News & Events Careers at BCIT Utility Navigation (mobile) Learning Hub myBCIT Students Staff COVID-19 Info Main Navigation (mobile) Programs & Courses Applied & Natural Sciences Business & Media Computing & IT Engineering Health Sciences Trades & Apprenticeships International Students English Training Academic Dates & Deadlines Admission Why BCIT? How to Apply Entrance Requirements Tuition & Fees Program Availability After You Apply Forms Contact Us Student Services Academic & Learning Services Campus Amenities Financial Aid & Awards Library Health & Wellness Safety & Security Student Life & Housing Technology Workplace & Career Opportunities Indigenous Initiatives International Student Centre Student Association Research Working with Us Research Centres Contact Research Applied Research Liaison Office Research Support People & Committees Centre for Applied Research & Innovation Research Funding Student Opportunities About BCIT Visit Us Our Schools Community Leadership & Vision News & Events Careers at BCIT Attend an Info Session Apply to a Program Give to BCIT Search Course Outlines COMP 2522 Object Oriented Programming 1 School School of Computing and Academic Studies Program Computer Systems Technology (CST) Diploma Course Credits 5 Minimum Passing Grade 50% Start Date January 04, 2022 End Date April 22, 2022 Total Hours 75 Total Weeks 15 Hours/Weeks 5 Delivery Type Lecture Pre-requisites COMP 1510 CRN 86144 Acknowledgement of Territories The British Columbia Institute of Technology acknowledges that our campuses are located on the unceded traditional territories of the Coast Salish Nations of Sḵwx̱wú7mesh (Squamish), səl̓ilwətaɁɬ (Tsleil-Waututh), and xwməθkwəy̓əm (Musqueam). Instructor Details Name Christopher Thompson E-mail chris_thompson@bcit.ca Location Online Office Hours Office Hours will be posted on the Learning Hub, by appointment. Office hours will be via video conferencing. Course Description This hands-on course follows on from COMP 1510. This course covers the fundamental concepts of design, development, testing, and debugging intermediate-level programs with an object-oriented programming language. Topics include language syntax, data abstraction, encapsulation, inheritance, polymorphism, and exception handling. Design Patterns and Graphical User Interfaces will be applied to appropriate problems. Course Learning Outcomes/Competencies Upon successful completion of this course, the student will be able to: Apply the properties of good object-oriented software design including encapsulation, information hiding, inheritance, and polymorphism to create easily extensible systems in the context of intermediate-level programs. Apply object-oriented decomposition to break a program into multiple classes with well-defined interfaces. Decompose a program into multiple classes with well defined interfaces. Analyze and explain behaviour of intermediate-level programs involving object-oriented programming constructs including encapsulation, information hiding, inheritance, and polymorphism. Write programs processing data using sources and sinks. Create and handle exceptions to write robust programs. Apply design techniques such as sequence diagrams, collaboration diagrams and class diagrams to define classes and their relationships when solving a problem. Add/modify relationships between classes and objects to show the design. Design, implement, debug and write automated tests for intermediate-level object-oriented programs in a modern high-level object-oriented programming language. Write programs addressing concurrency issues such as race conditions using synchronization techniques including synchronization, wait/notify, join, and sleep. Program with lambda expressions and closures. Learning Resources Textbooks (Recommended but not required): Bloch, Joshua. (2017). Effective Java 3rd Edition . Addison-Wesley. Fowler, Martin. (2018). Refactoring: Improving the Design of Existing Code 2nd Edition . Addison-Wesley. Goetz, Brian et al. (2006). Java Concurrency in Practice . Pearson. Horstmann, Cay S. (2014). Java SE 8 for the Really Impatient . Pearson. Horstmann, Cay S. (2018). Core Java Volume 1--Fundamentals 11th Edition . Prentice Hall. Horstmann, Cay S. (2019). Core Java Volume 2--Advanced Features 11th Edition . Prentice Hall. Langr. Jeff. (2015). Pragmatic Unit Testing in Java 8 with JUnit . Pragmatic Bookshelf. Larman, Craig. (2004). Applying UML and Patterns 3rd Edition . Prentice Hall. Software (Required) A free copy of the Java 17 SDK A free copy of the JetBrains IntelliJ IDEA Professional IDE (instructions provided at first lecture) You can request or renew your free JetBrains Education License in advance here: https://www.jetbrains.com/community/education/#students A free account at Github.com (this will be used to submit your assignments, quizzes, and labs) A f ree Student Developer Pack from Github Get it here: https://education.github.com/pack This may be used to submit assignments, labs, and quizzes A free Slack account so you can join our COMP 2522 workspace Videoconferencing software (see D2L for more details). Evaluation Criteria Criteria % Comments Weekly quizzes 10 Short in-lab and in-class quizzes and coding activities Weekly labs 30 Weekly time-restricted programming exercises Midterm assessment 20 During midterm week (week 7) Final assessment 20 During final exam week (week 15 or week 16) Term project 15 Assigned after midterms and due at the end of term Participation 5 Attendance, contributions to discussions, etc. Attendance Requirements Regular attendance in lectures, seminars, and labs is seen as critical to student success, and may be monitored by faculty. Unapproved absence of 2 or more classes may result in failure or forced withdrawal from the course or program. Please see Policy 5101 - Student Regulations: http://www.bcit.ca/files/pdf/policies/5101.pdf Course Schedule and Assignments WEEK NUMBER WEEK OF TOPICS 1 03 Jan Lecture 1: Introduction; logistics; introducing Java to Python developers aka the semi-colon is your new bff; Java buzzwords; Hello world! aka introduction to the main method and standard Java program structure; System; declaring and initializing (assignment) in Java; identifiers; Java is strongly typed and statically typed; Java's primitive data types; overflow and rollover; data conversion (widening and narrowing, assignment conversion, promotion, casting); operators and precedence; increment and decrement Lecture 2: Logical operators; control structures in Java; expressions, statements, and blocks; intro to the String class; primitives vs references to objects; null; instantiating objects with the new operator; the JVM and the Java memory model; garbage collection; identity vs equality; String interning; Java is pass by value; aliases and references; intro to the HashMap, ArrayList, Set; autoboxing and wrapper classes; for-each loop; Scanner and user input; command line arguments; command line arguments in IntelliJ Lecture 3: The Java class vs the main method; anatomy and structure of a basic class; the constructor; default and defined constructors; default values; instance variables scope and state; visibility modifiers, information hiding, and accessors and mutators; toString; this keyword; public interface vs private implementation; minimize scope, mutability and accessibility Lab: no labs during week 1 2 10 Jan Lecture 1: SOLID: Single responsibility; UML class diagram (single class); anatomy of a method; method as service provider; variable length parameter lists; private vs public methods; overloading methods and constructors; calling overloaded constructors from constructors; use a private constructor to enforce Singleton or noninstantiability (a gentle introduction to design patterns) Lecture 2: The importance of code style to Java developers; documentation and Javadocs; structure of the Java API; Random class; use Big Numbers instead of float/double when exact answers are required; DecimalFormat, NumberFormat, Formatter; formatting output with printf (conversion characters, field width), String.format, performance warning: String concatenation; Stringbuilder class Lecture 3: Reusing classes aka don't reinvent the wheel (composition); minimizing coupling and maximizing cohesion; implementing associations (and representing them in UML): composition, dependency, delegation; the Law of Demeter Lab 1: Set up your toolchain and play with regex 3 17 Jan Lecture 1: The equals method; hashCode and its relationship to equals; hashing, the pigeonhole principle, and the HashMap; assertions; unit testing with Junit; enumerations Lecture 2: Static members (constant class variables, non-constant class variables, static initialization blocks, methods); static factory methods instead of constructors; underline statics in UML; comparing doubles; comparing doubles with static methods; Math class and other useful library collections of static helper methods Lecture 3: Fixed length array; arrays of objects; looping through multi-dimensional arrays; looping through ragged arrays; prefer ArrayList to arrays; implementing associations: aggregation Lab 2: The perfect class -- encapsulation, information hiding, reducing mutability, cohesion, abstraction 4 24 Jan Lecture 1: Inheritance; the Object class; super; calling super from the constructor; protected; overriding and hiding methods; @Override and annotations; final classes and methods; default visibility Lecture 2: SOLID: Open-closed (GRASP protected variations); intro to polymorphism; static and dynamic types; polymorphic method dispatch Lecture 3: Comparing Java's typing system to Python's duck typing; order of initialization (intro); constructors should not call overridables Lab 3: Your first algorithm! You will solve a classic programming conundrum, and then optimize your algorithm using dynamic programming. 5 31 Jan Lecture 1: Abstract base classes; interfaces (including Comparable, Comparator, Iterable, List); interfaces and common methods, default methods; abstract classes vs interfaces; prefer interfaces to abstract classes Lecture 2: Harnessing polymorphism via inheritance and via interfaces: casting and instanceof; pure inheritance and revisiting equals (instanceof vs getclass); SOLID: Liskov Lecture 3: Polymorphism and order of initialization (further analysis); reusing classes (composition vs inheritance); favour composition over inheritance Lab 4: Inheritance and Polymorphism. You will implement a small system of classes that model an interesting simulation and/or employ a common design pattern. 6 07 Feb Lecture 1: Robust exception handling (catch or specify); Java is LBYL not EAFP; try-catch-finally; custom exceptions; unit testing and expected exceptions; advantages of using checked exceptions for recoverable conditions and runtime exceptions for programmer error; ways of treating checked vs unchecked exceptions; the controversy with unchecked exceptions Lecture 2: Formal introduction to parameterized types and generics; bounded types; raw types; type inference; generic methods; wildcards; bounds vs wildcards; type erasure; benefits of and restrictions on generics Lecture 3: File IO (NIO.2: Path and Files): a byte is a byte is a byte, try with resources; creating files and directories; copying, moving, and deleting files; serialization and alternatives Lab 5: More about polymorphism. You will implement another small system of classes that solves an interesting programming conundrum. 7 14 Feb Midterm assessment (no class) 8 21 Feb Lecture 1: Midterm review; JDBC and connecting to a DB; unit testing: mock objects (Mockito) Lecture 2: Intro to nested and inner classes; responsibility-driven design and a case study: iterator Lecture 3: The Java Collection Framework in depth: abstract data type (ADT) as logical form of a data type; data structures as physical form of a data type; review of important classes including ArrayList, HashMap. Set, and their interfaces, Queue, Stack Lab 6: Networking. You will implement, debug,", '<div class="outline__course-name">\n<h2>Object Oriented Programming 1</h2>\n</div><div class="outline__course-code">\n<h2>COMP 2522</h2>\n</div><div class="outline__course-code">\n<h2>COMP 2522</h2>\n</div>test, and demonstrate a simple client and server. Note that set 2E will not attend lab on Monday, Family Day. We will schedule a time together to compensate. Term project: released 9 28 Feb Lecture 1: Time and space complexity; intro to asymptotic notation and Big-O; searching and sorting algorithms; sorting in place; sorting using Comparable and Comparators Lecture 2: Trees; heaps; profiling (timing) Lecture 3: UML sequence and communication diagrams using the Observer pattern as an example Lab 7: Managing data using a database and persistence. Write, publish, and test a program that incorporates JDBC and a common RDBMS using Heroku, Spring, RESTful APIs, Postman. 10 07 Mar Lecture 1: SOLID: Interface segregation and dependency inversion; dependency injection loosens coupling; GRASP Creator aka Factory Pattern Lecture 2: Design pattern: Composite, design pattern: Decorator Lecture 3: Functional interfaces and Predicates Lab 08: Design patterns. Explore the Observer pattern and implement a solution to a classic programming problem: solving a maze! 11 14 Mar Spring break (no class) 12 21 Mar Lecture 1: Introduction to local classes and anonymous classes using JavaFX Lecture 2: Lambda expressions and closures: why, syntax, scope; constructor and method references; laziness; prefer lambda to anonymous classes; prefer method references to lambdas Lecture 3: Aggregate and stream operations; filter, map, and flatMap; reduction operations Lab 09: TBA 13 28 Mar Lecture 1: Reflection (introspection); reflection and unit testing (TDD) Lecture 2: Introduction to concurrency and threading; thread objects; thread interference and memory consistency errors; thread safety, atomicity, and locking; sharing objects; race conditions; deadlock Lecture 3: More concurrency: synchronization and locks; atomic variables; Java\'s volatile keyword; wait/notify and new concurrency utilities; join; sleep; guarded blocks Lab 10: The lambda! 14 04 Apr Lecture 1: Blocking queues; producer-consumer; immutable objects; composing thread safe (concurrent) collections Lecture 2: Java in the wild (survey): build tools and dependency managers; enterprise Java Lecture 3: Final Exam review: OOP as encapsulation, inheritance, polymorphism, i.e., the ability through polymorphism to gain absolute control over every source code dependency in the system by creating a plugin architecture in which modules that contain high level policies are separate from modules which contain low-level details; when to use OOP; when to use Java Lab 11: Concurrency. Explore how concurrency may add complexity and how to manage it. 15/16 11 Apr/ 18Apr Final assessment (no classes) * Subject to change. BCIT Policy Any student who needs special assistance in the event of a medical emergency or building evacuation (either because of a disability or for any other reason) should promptly inform their course instructor(s) and Accessibility Services of their personal circumstances. Human Rights, Harassment and Discrimination: The BCIT community is made up of individuals from every ability, background, experience and identity, each contributing uniquely to the richness and diversity of the BCIT community as a whole. In recognition of this, and the intrinsic value of our diversity, BCIT seeks to foster a climate of collaboration, understanding and mutual respect between all members of the community and ensure an inclusive accessible working and learning environment where everyone can succeed. Respect, Diversity, and Inclusion is a supportive resource for both students and employees of BCIT, to foster a respectful learning and working environment. Any student who feels that they are experiencing discrimination or harassment (personal or human rights-related) can confidentially access this resource for advice and support. Please see Policy 7507 – Harassment and Discrimination and accompanying procedure. Students should make themselves aware of additional Education, Administration, Safety and other BCIT policies listed at https://www.bcit.ca/about/administration/policies.shtml Guidelines for School of Computing and Academic Studies Attempts: Students must successfully complete a course within a maximum of three (3) attempts at the course. Students with two attempts in a single course will be allowed to repeat the course only upon special written permission from the Associate Dean. Students who have not successfully completed a course within three attempts will not be eligible to graduate from their respective program. Approved I verify that the content of this course outline is current. Christopher Thompson, Instructor December 30, 2021 I verify that this course outline has been reviewed. Chi En Huang, Program Head December 30, 2021 I verify that this course outline has been reviewed and complies with BCIT policy. Aaron Hunter, Acting Associate Dean December 30, 2021 Note: Should changes be required to the content of this course outline, students will be given reasonable notice. Contact 3700 Willingdon Ave. Burnaby, British Columbia Canada V5G 3H2 bcit.ca Telephone: 604-434-5734 Toll-free (Can/US): 1-866-434-1610 More contact numbers Like us on Facebook Follow us on Twitter Add us on LinkedIn Follow us on Instagram Feedback Copyright Privacy Visit Apply Now Give News Events Careers Campus Information Burnaby Campus Downtown Campus Marine Campus Aerospace Technology Campus Annacis Island Campus Feedback']